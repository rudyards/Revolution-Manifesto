#!/usr/bin/env ruby

require_relative "../lib/card_database"
require "haml"
require "pry"

$queries = []

def search_help(query, comment)
  $queries << query
end

syntax_help_path = "#{__dir__}/../../frontend/app/views/help/syntax.html.haml"
syntax_help = Pathname(syntax_help_path).read

eval Haml::Engine.new.call(syntax_help)

parsed = $queries.map{|q| QueryParser.new.parse(q) }
all_condition_classes = ObjectSpace.each_object(Class).select{|c| c <= Condition }
commented_condition_classes = ObjectSpace.each_object(Condition).map(&:class).to_set

all_condition_classes.sort_by(&:to_s).each do |c|
  if commented_condition_classes.include?(c)
    puts "[x] #{c}"
  elsif commented_condition_classes.any?{|cc| cc < c }
    puts "[*] #{c}"
  else
    puts "[ ] #{c}"
  end
end
